// Code generated by "stringer -type=Type"; DO NOT EDIT.

package tok

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Error-0]
	_ = x[AnnStart-1]
	_ = x[Array-2]
	_ = x[ArrayEnd-3]
	_ = x[ArrayStart-4]
	_ = x[Assign-5]
	_ = x[BoolLit-6]
	_ = x[BoolType-7]
	_ = x[Colon-8]
	_ = x[Comma-9]
	_ = x[Comment-10]
	_ = x[Constraint-11]
	_ = x[EOF-12]
	_ = x[EOI-13]
	_ = x[FloatLit-14]
	_ = x[FloatType-15]
	_ = x[Identifier-16]
	_ = x[IntLit-17]
	_ = x[IntType-18]
	_ = x[Maximize-19]
	_ = x[Minimize-20]
	_ = x[Of-21]
	_ = x[Predicate-22]
	_ = x[Range-23]
	_ = x[Satisfy-24]
	_ = x[Set-25]
	_ = x[SetEnd-26]
	_ = x[SetStart-27]
	_ = x[Solve-28]
	_ = x[StringLit-29]
	_ = x[TupleEnd-30]
	_ = x[TupleStart-31]
	_ = x[Var-32]
}

const _Type_name = "ErrorAnnStartArrayArrayEndArrayStartAssignBoolLitBoolTypeColonCommaCommentConstraintEOFEOIFloatLitFloatTypeIdentifierIntLitIntTypeMaximizeMinimizeOfPredicateRangeSatisfySetSetEndSetStartSolveStringLitTupleEndTupleStartVar"

var _Type_index = [...]uint8{0, 5, 13, 18, 26, 36, 42, 49, 57, 62, 67, 74, 84, 87, 90, 98, 107, 117, 123, 130, 138, 146, 148, 157, 162, 169, 172, 178, 186, 191, 200, 208, 218, 221}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
